version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis
    networks:
      - trump_scanner_network

  scraper:
    build: .
    container_name: trump-scanner
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./config:/app/config
      - ./legal_documents:/app/legal_documents
      - ./error_logs:/app/error_logs
    environment:
      - DATABASE_URL=mysql://trump_scanner:trump_scanner_password@db:3306/trump_scanner
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=trump_scanner_redis_password
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USER=elastic
      - ELASTICSEARCH_PASSWORD=trump_scanner_elastic_password
      - SCRAPEOPS_API_KEY=${SCRAPEOPS_API_KEY}
      - COURT_LISTENER_API_KEY=${COURT_LISTENER_API_KEY}
      - DOCUMENT_CLOUD_API_KEY=${DOCUMENT_CLOUD_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_CSE_ID=${GOOGLE_CSE_ID}
      - LOG_LEVEL=info
    ports:
      - "5555:5555"  # Prisma Studio
      - "3000:3000"  # Application
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - trump_scanner_network

  prometheus:
    image: prom/prometheus:latest
    container_name: trump-scanner-prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - trump_scanner_network

  grafana:
    image: grafana/grafana:latest
    container_name: trump-scanner-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - trump_scanner_network

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: trump-scanner-alertmanager
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    ports:
      - "9093:9093"
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring

  db:
    image: mysql:8.0
    container_name: trump-scanner-db
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=trump_scanner
      - MYSQL_USER=trump_scanner
      - MYSQL_PASSWORD=trump_scanner_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./prisma:/docker-entrypoint-initdb.d
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "trump_scanner", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - trump_scanner_network

  redis:
    image: redis:7.0
    container_name: trump-scanner-redis
    command: redis-server --requirepass trump_scanner_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "trump_scanner_redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - trump_scanner_network

  elasticsearch:
    image: elasticsearch:8.11.1
    container_name: trump-scanner-elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=trump_scanner_elastic_password
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q 'status.*green'"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - trump_scanner_network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.1
    container_name: trump-scanner-logstash
    volumes:
      - ./monitoring/logstash/config:/usr/share/logstash/config
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline
      - logstash_data:/usr/share/logstash/data
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    container_name: trump-scanner-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:5601/api/status | grep -q 'available.*true'"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.12.1
    container_name: trump-scanner-filebeat
    volumes:
      - ./monitoring/filebeat:/usr/share/filebeat
      - ./logs:/app/logs:ro
      - ./error_logs:/app/error_logs:ro
    depends_on:
      - logstash
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    container_name: trump-scanner-loki
    volumes:
      - loki_data:/loki
    ports:
      - "3100:3100"
    networks:
      - trump_scanner_network

  promtail:
    image: grafana/promtail:latest
    container_name: trump-scanner-promtail
    volumes:
      - ./promtail:/etc/promtail
      - ./logs:/var/log/trump-scanner:ro
      - ./error_logs:/var/log/trump-scanner/errors:ro
    depends_on:
      - loki
    networks:
      - trump_scanner_network

volumes:
  mysql_data:
  redis_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  logstash_data:
  loki_data:

networks:
  app-network:
    driver: bridge
  monitoring:
    driver: bridge
  trump_scanner_network:
    driver: bridge 